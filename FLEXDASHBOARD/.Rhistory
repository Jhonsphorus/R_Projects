library(flexdashboard)
library(flexdashboard)
library(ggplot2)
my_dt <- read.csv("german_credit_data.csv")
ggplot(my_dt, aes(x=Duration,y=Credit.amount, color=Risk )) +labs(title = "History of Previous Loan Applicants", x="Duration (Month)", y="Credit Amount (#)")+
geom_point()+theme_dark() +scale_x_continuous(breaks = seq(0,90,by=6))
boxplot(Credit.amount~Risk, data=my_dt, main="Boxplot of Credit Amount",col="Green")
boxplot(Duration~Risk, data=my_dt, main="Boxplot of Duration",col="Orange")
library(flexdashboard)
my_dt <- read.csv("german_credit_data.csv")
ggplot(my_dt, aes(x=Duration,y=Credit.amount, color=Risk )) +labs(title = "History of Previous Loan Applicants", x="Duration (Month)", y="Credit Amount (#)")+
geom_point()+theme_dark() +scale_x_continuous(breaks = seq(0,90,by=6))
boxplot(Credit.amount~Risk, data=my_dt, main="Boxplot of Credit Amount",col="Green")
boxplot(Duration~Risk, data=my_dt, main="Boxplot of Duration",col="Orange")
getwd()
search()
ls()
library(flexdashboard)
library(ggplot2)
# For column orientation (###) is the row and (---) is the column
# For row orientation (###) is the column and (---) is the row
my_dt <- read.csv("german_credit_data.csv")
renderPlot({ggplot(my_dt, aes(x=Duration,y=Credit.amount, color=Risk )) +labs(title = "History of Previous Loan Applicants", x="Duration (Month)", y="Credit Amount (#)")+
geom_point()+theme_dark() +scale_x_continuous(breaks = seq(0,90,by=6))
})
library(flexdashboard)
library(ggplot2)
library(shiny)
# For column orientation (###) is the row and (---) is the column
# For row orientation (###) is the column and (---) is the row
my_dt <- read.csv("german_credit_data.csv")
renderPlot({ggplot(my_dt, aes(x=Duration,y=Credit.amount, color=Risk )) +labs(title = "History of Previous Loan Applicants", x="Duration (Month)", y="Credit Amount (#)")+
geom_point()+theme_dark() +scale_x_continuous(breaks = seq(0,90,by=6))
})
renderPlot({boxplot(Credit.amount~Risk, data=my_dt, main="Boxplot of Credit Amount",col="Green")
})
renderPlot({
boxplot(Duration~Risk, data=my_dt, main="Boxplot of Duration",col="Orange")
})
library(flexdashboard)
library(ggplot2)
library(shiny)
# For column orientation (###) is the row and (---) is the column
# For row orientation (###) is the column and (---) is the row
my_dt <- read.csv("german_credit_data.csv")
renderPlot({ggplot(my_dt, aes(x=Duration,y=Credit.amount, color=Risk )) +labs(title = "History of Previous Loan Applicants", x="Duration (Month)", y="Credit Amount (#)")+
geom_point()+theme_dark() +scale_x_continuous(breaks = seq(0,90,by=6))
})
renderPlot({boxplot(Credit.amount~Risk, data=my_dt, main="Boxplot of Credit Amount",col="Green")
})
renderPlot({
boxplot(Duration~Risk, data=my_dt, main="Boxplot of Duration",col="Orange")
})
library(flexdashboard)
library(ggplot2)
library(shiny)
# For column orientation (###) is the row and (---) is the column
# For row orientation (###) is the column and (---) is the row
my_dt <- read.csv("german_credit_data.csv")
renderPlot({ggplot(my_dt, aes(x=Duration,y=Credit.amount, color=Risk )) +labs(title = "History of Previous Loan Applicants", x="Duration (Month)", y="Credit Amount (#)")+
geom_point()+theme_dark() +scale_x_continuous(breaks = seq(0,90,by=6))
})
renderPlot({boxplot(Credit.amount~Risk, data=my_dt, main="Boxplot of Credit Amount",col="Green")
})
renderPlot({
boxplot(Duration~Risk, data=my_dt, main="Boxplot of Duration",col="Orange")
})
library(flexdashboard)
library(ggplot2)
library(shiny)
# For column orientation (###) is the row and (---) is the column
# For row orientation (###) is the column and (---) is the row
my_dt <- read.csv("german_credit_data.csv")
renderPlot({ggplot(my_dt, aes(x=Duration,y=Credit.amount, color=Risk )) +labs(title = "History of Previous Loan Applicants", x="Duration (Month)", y="Credit Amount (#)")+
geom_point()+theme_dark() +scale_x_continuous(breaks = seq(0,90,by=6))
})
renderPlot({boxplot(Credit.amount~Risk, data=my_dt, main="Boxplot of Credit Amount",col="Green")
})
renderPlot({
boxplot(Duration~Risk, data=my_dt, main="Boxplot of Duration",col="Orange")
})
rmarkdown::run()
library(rmarkdown)
?run
getwd()
rmarkdown::run("flexdashboard_fill.Rmd")
rmarkdown::run("flexdashboard_scroll.Rmd")
library(flexdashboard)
# For column orientation (###) is the row and (------) is the column
# For row orientation (###) is the column and (------) is the row
my_dt <- read.csv("german_credit_data.csv")
ggplot(my_dt, aes(x=Duration,y=Credit.amount, color=Risk )) +labs(title = "History of Previous Loan Applicants", x="Duration (Month)", y="Credit Amount (#)")+
geom_point()+theme_dark() +scale_x_continuous(breaks = seq(0,90,by=6))
boxplot(Credit.amount~Risk, data=my_dt, main="Boxplot of Credit Amount",col="Green")
boxplot(Duration~Risk, data=my_dt, main="Boxplot of Duration",col="Orange")
library(flexdashboard)
rate <- computeContactRate()
library(flexdashboard)
library(shiny)
computeContactRate <- function(){
numericInput("contact","Enter Contact Rate",value = 0,min = 0,max = 100)
}
rate <- computeContactRate()
gauge(rate, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
numericInput("contact","Enter Contact Rate",value = 0,min = 0,max = 100)
computeContactRate <- function(){
return(input$contact)
}
rate <- computeContactRate()
computeContactRate <- function(){
numericInput("contact","Enter Contact Rate",value = 0,min = 0,max = 100)
return(input$contact)
}
rate <- computeContactRate()
computeContactRate <- function(){
a = numericInput("contact","Enter Contact Rate",value = 0,min = 0,max = 100)
return(a)
}
rate <- computeContactRate()
gauge(rate, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
numericInput("rate","Enter Contact Rate", value = 0,min = 0,max = 100)
selectInput("n_breaks", label = "Number of bins:",choices = c(10, 20, 35, 50), selected = 20)
#computeContactRate <- function(){
#a = numericInput("contact","Enter Contact Rate",value = 0,min = 0,max = 100)
#return(a)
#}
#rate <- computeContactRate()
gauge(rate, min = 0, max = 100, symbol = '%', gaugeSectors(
success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
#rate <- computeContactRate()
gauge(rate, min = 0, max = 100, symbol = '%', gaugeSectors(success = c(80, 100), warning = c(40, 79), danger = c(0, 39)
))
#rate <- computeContactRate()
renderGauge({
gauge(rate, min = 0, max = 100, symbol = '%', gaugeSectors(success = c(80, 100), warning = c(40, 79), danger = c(0, 39)))
})
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
library(flexdashboard)
library(shiny)
numericInput("rate","Enter Contact Rate", value = 0,min = 0,max = 100)
selectInput("n_breaks", label = "Number of bins:",choices = c(10, 20, 35, 50), selected = 20)
#computeContactRate <- function(){
#a = numericInput("contact","Enter Contact Rate",value = 0,min = 0,max = 100)
#return(a)
#}
#rate <- computeContactRate()
renderGauge({
gauge(input$rate, min = 0, max = 100, symbol = '%', gaugeSectors(success = c(80, 100), warning = c(40, 79), danger = c(0, 39)))
})
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
?renderGauge
?gauge
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
?numericInput
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage2.Rmd")
rmarkdown::run("flexdashboard_guage2.Rmd")
rmarkdown::run("flexdashboard_guage2.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
rmarkdown::run("flexdashboard_guage.Rmd")
getwd()
rmarkdown::run("flexdashboard_guage2.Rmd")
rmarkdown::run("flexdashboard_guage2.Rmd")
200*300
getwd()
library()
install.packages("ggpubr")
install.packages("shinydashboard")
