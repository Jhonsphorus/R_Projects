library(caret)
library(randomForest)
library(caret)
library(randomForest)
train <- read.csv("train.csv")
train <- read.csv("train.csv")
View(train)
nrow(train)
ncol(train)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
#View(train)
nrow(train)
ncol(train)
nrow(test)
ncol(test)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
View(test)
table(train[,c('Survived', 'Pclass')])
str(train)
col(train)
colnames(train)
table(train[,c('Survived', 'ticket_class')])
install.packages("fields")
library(fields)
library(fields)
library(fields)
bplot.xy(train$Survived, train$Age)
library(fields)
bplot.xy(train$Survived, train$age)
summary(train$age)
bplot.xy(train$Survived,train$fare)
sapply(train, function(x) sum(is.na(x)))
library(caret)
library(randomForest)
library(na.tools)
library(caret)
library(randomForest)
library(na.tools)
train$fare <- na.mean(train$fare)
sapply(train, function(x) sum(is.na(x)))
table(train$Survived,train$sex)
table(train[,c('Survived', 'sex')])
#table(train$Survived,train$sex)
table(train[,c('Survived', 'embarked')])
#table(train$Survived,train$sex)
bplot.xy(train$Survived,train$fare)
summary(train$age)
library(fields)
bplot.xy(train$Survived, train$age)
bplot.xy(train$Survived,train$Siblings_spouses)
bplot.xy(train$Survived,train$Parchil)
train$Survived <- factor(train$Survived)
str(train)
library(caret)
library(randomForest)
library(na.tools)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
View(test)
nrow(train)
ncol(train)
nrow(test)
ncol(test)
str(train)
sapply(train, function(x) sum(is.na(x)))
train$fare <- na.mean(train$fare)
sapply(train, function(x) sum(is.na(x)))
train$Survived <- factor(train$Survived)
# using cross-tabs to check if the feature or predictor is significant to the response variable
table(train[,c('Survived', 'ticket_class')])
table(train[,c('Survived', 'sex')])
#table(train$Survived,train$sex)
table(train[,c('Survived', 'embarked')])
library(fields)
bplot.xy(train$Survived, train$age)
library(fields)
boxplot(train$Survived, train$age)
library(caret)
library(randomForest)
library(na.tools)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
View(test)
str(train)
sapply(train, function(x) sum(is.na(x)))
train$fare <- na.mean(train$fare)
sapply(train, function(x) sum(is.na(x)))
# using cross-tabs to check if the feature or predictor is significant to the response variable
table(train[,c('Survived', 'ticket_class')])
table(train[,c('Survived', 'sex')])
#table(train$Survived,train$sex)
table(train[,c('Survived', 'embarked')])
library(fields)
bplot.xy(train$Survived, train$age)
summary(train$age)
bplot.xy(train$Survived,train$fare)
bplot.xy(train$Survived,train$Siblings_spouses)
bplot.xy(train$Survived,train$Parchil)
train$Survived <- factor(train$Survived)
set.seed(100)
model <- train (Survived ~ ticket_class + sex + Siblings_spouses +embarked +Parchil + fare,data = train, method = 'rf',trControl = trainControl(method = 'cv', number = 5))
model
set.seed(51)
model <- train (Survived ~ ticket_class + sex + Siblings_spouses +embarked +Parchil + fare,data = train, method = 'rf',trControl = trainControl(method = 'cv', number = 5))
model
set.seed(10)
model <- train (Survived ~ ticket_class + sex + Siblings_spouses +embarked +Parchil + fare,data = train, method = 'rf',trControl = trainControl(method = 'cv', number = 5))
model
control <- trainControl(method = 'cv', number = 5)
set.seed(10)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control)
model
control <- trainControl(method = 'cv', number = 5)
set.seed(51)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control)
model
control <- trainControl(method = 'repeatedcv', number = 5, repeats = 3)
set.seed(51)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control)
model
control <- trainControl(method = 'repeatedcv', number = 5, repeats = 3)
set.seed(1)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control)
model
control <- trainControl(method = 'repeatedcv', number = 5, repeats = 3)
set.seed(1)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control, tuneLength=10)
model
control <- trainControl(method = 'repeatedcv', number = 5, repeats = 3)
set.seed(10)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control)
model
control <- trainControl(method = 'repeatedcv', number = 5, repeats = 3)
set.seed(100)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control)
model
control <- trainControl(method = 'cv', number = 5)
set.seed(2)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control)
model
control <- trainControl(method = 'cv', number = 10)
set.seed(2)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control)
model
summary(test)
#summary(test)
sapply(test, function(x) sum(is.na(x)))
survival_pred <- predict(model, test)
survival_pred
str(test)
survival_table <- data.frame(test$traveller_ID,train$sex,train$name,survival_pred)
survival_table <- data.frame(c(test$traveller_ID,train$sex,train$name,survival_pred))
survival_table <- data.frame(c(test$traveller_ID,train$sex,train$name,survival_pred))
View(survival_table)
survival_table <- data.frame(c(test$traveller_ID,test$sex,test$name,survival_pred))
View(survival_table)
survival_table <- data.frame(c(test$traveller_ID,survival_pred))
View(survival_table)
survival_table <- data.frame(c(test$traveller_ID,survival_pred))
survival_table
survival_table <- data.frame(test$traveller_ID,survival_pred)
survival_table
survival_table <- data.frame(test$traveller_ID,survival_pred)
View(survival_table)
survival_table <- data.frame(test$traveller_ID,test$name,test$sex, survival_pred)
View(survival_table)
survival_table <- data.frame(test$traveller_ID,test$name,test$sex, survival_pred)
colnames(survival_table) <- c("TravellerID","Name","Sex","Survival_Prediction")
View(survival_table)
# Creating the grid search
grid <- expand.grid(C = c(0,0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2,5))
control <- trainControl(method = 'cv', number = 10)
set.seed(2)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control, tuneGrid=grid)
# Creating the grid search
grid <- expand.grid(C = c(0,0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2,5))
control <- trainControl(method = 'cv', number = 10)
set.seed(2)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control, tuneGrid=grid, tuneLength=10)
?train
control <- trainControl(method = 'cv', number = 10)
set.seed(2)
model <- train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train, method = 'rf',trControl = control, tuneGrid=grid, tuneLength=10)
?expand.grid
library(auto.pca)
auto.pca(train)
library(caret)
library(randomForest)
library(na.tools)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
View(test)
auto.pca(train)
library(automl)
?automl_train
automl_train(Survived~ticket_class+sex+Siblings_spouses+embarked+Parchil+fare,data = train,)
x <- train[,c("ticket_class","sex","Siblings_spouses","embarked","fare","Parchil")]
x <- train[,c("ticket_class","sex","Siblings_spouses","embarked","fare","Parchil")]
View(x)
x <- train[,c("ticket_class","sex","Siblings_spouses","embarked","fare","Parchil")]
y <- train[,"Survived"]
View(y)
x <- train[,c("ticket_class","sex","Siblings_spouses","embarked","fare","Parchil")]
y <- train[,c("Survived")]
View(y)
model2 <- automl_train(x,y)
library(caret)
library(randomForest)
library(na.tools)
library(caret)
library(randomForest)
library(na.tools)
table(train[,c('Survived', 'sex')])
#table(train$Survived,train$sex)
ls()
